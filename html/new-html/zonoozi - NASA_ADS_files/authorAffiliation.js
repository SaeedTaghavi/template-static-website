function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,n)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}define(["underscore"],function(e){return{create:function(r,t){var n={id:e.uniqueId(),selected:!0,author:r,affiliations:[],lastActiveDates:[]};return n.affiliations=function(e){if(e.length>1&&"-"===e[0].name){var r=e.findIndex(function(e){return"-"!==e.name});if(r)return[].concat(_toConsumableArray(e.slice(0,r)),[_objectSpread({},e[r],{selected:!0})],_toConsumableArray(e.slice(r+1)))}return[_objectSpread({},e[0],{selected:!0})]}(t.map(function(r,t){return{id:e.uniqueId(),selected:!1,name:r.affiliations.name,years:r.affiliations.years}})),n.lastActiveDates=t.map(function(r,t){return{id:e.uniqueId(),selected:0===t,date:r.affiliations.lastActiveDate}}),n}}});